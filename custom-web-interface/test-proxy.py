#!/usr/bin/env python3
"""
Script de test pour v√©rifier la connectivit√© du proxy CORS et de l'API Faraday
"""

import requests
import json

# URLs de test
PROXY_URL = "http://localhost:8082"
FARADAY_DIRECT_URL = "http://localhost:5985"

def test_proxy_health():
    """Test de la route de sant√© du proxy"""
    print("üîç Test de la sant√© du proxy...")
    try:
        response = requests.get(f"{PROXY_URL}/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Proxy op√©rationnel: {data}")
            return True
        else:
            print(f"‚ùå Proxy r√©pond avec code: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå Impossible de se connecter au proxy sur localhost:8082")
        return False
    except Exception as e:
        print(f"‚ùå Erreur proxy: {e}")
        return False

def test_faraday_direct():
    """Test de connexion directe √† Faraday"""
    print("\nüîç Test de connexion directe √† Faraday...")
    try:
        response = requests.get(f"{FARADAY_DIRECT_URL}/_api/v3/info", timeout=5)
        print(f"‚úÖ Faraday r√©pond avec code: {response.status_code}")
        if response.status_code == 200:
            print(f"   Info: {response.json()}")
        return True
    except requests.exceptions.ConnectionError:
        print("‚ùå Impossible de se connecter √† Faraday sur localhost:5985")
        return False
    except Exception as e:
        print(f"‚ùå Erreur Faraday: {e}")
        return False

def test_proxy_api():
    """Test d'acc√®s √† l'API via le proxy"""
    print("\nüîç Test d'acc√®s √† l'API via le proxy...")
    try:
        # Test de l'endpoint info via le proxy
        response = requests.get(f"{PROXY_URL}/_api/v3/info", timeout=5)
        print(f"Status code: {response.status_code}")
        print(f"Content-Type: {response.headers.get('Content-Type', 'Non d√©fini')}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"‚úÖ API accessible via proxy: {data}")
                return True
            except json.JSONDecodeError:
                print("‚ùå R√©ponse non-JSON re√ßue du proxy:")
                print(f"   D√©but de la r√©ponse: {response.text[:200]}...")
                return False
        else:
            print(f"‚ùå Erreur HTTP: {response.status_code}")
            print(f"   R√©ponse: {response.text[:200]}...")
            return False
    except Exception as e:
        print(f"‚ùå Erreur proxy API: {e}")
        return False

def main():
    print("=== Test de connectivit√© Faraday ===\n")
    
    # Tests s√©quentiels
    proxy_ok = test_proxy_health()
    faraday_ok = test_faraday_direct()
    
    if proxy_ok and faraday_ok:
        test_proxy_api()
    elif not proxy_ok:
        print("\nüí° D√©marrez le proxy avec: python faraday-cors-proxy.py")
    elif not faraday_ok:
        print("\nüí° V√©rifiez que Faraday est d√©marr√© sur localhost:5985")
    
    print("\n=== Fin des tests ===")

if __name__ == "__main__":
    main()
