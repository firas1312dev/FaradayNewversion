# Script de d√©marrage du proxy Faraday avec projets statiques
Write-Host "=== D√©marrage du proxy Faraday avec projets statiques ===" -ForegroundColor Green
Write-Host ""

# V√©rifier si Python est install√©
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python d√©tect√©: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python n'est pas install√© ou pas dans le PATH" -ForegroundColor Red
    Write-Host "Installez Python depuis https://python.org" -ForegroundColor Yellow
    pause
    exit
}

# V√©rifier si le port 8082 est libre
$portCheck = netstat -ano | Select-String ":8082"
if ($portCheck) {
    Write-Host "‚ö†Ô∏è Le port 8082 est d√©j√† utilis√©. Tentative d'arr√™t..." -ForegroundColor Yellow
    $processes = $portCheck | ForEach-Object { ($_ -split '\s+')[-1] }
    foreach ($pid in $processes) {
        try {
            Stop-Process -Id $pid -Force -ErrorAction SilentlyContinue
            Write-Host "üõë Processus $pid arr√™t√©" -ForegroundColor Yellow
        } catch {}
    }
    Start-Sleep -Seconds 2
}

Write-Host "üöÄ D√©marrage du proxy CORS..." -ForegroundColor Cyan

# D√©marrer le proxy en arri√®re-plan
$job = Start-Job -ScriptBlock {
    Set-Location $using:PWD
    python faraday-cors-proxy.py
}

Write-Host "‚è≥ Attente du d√©marrage (3 secondes)..." -ForegroundColor Yellow
Start-Sleep -Seconds 3

# Tester la connectivit√©
Write-Host "üîç Test de connectivit√©..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8082/health" -TimeoutSec 5
    Write-Host "‚úÖ Proxy op√©rationnel:" -ForegroundColor Green
    Write-Host "   Status: $($response.status)" -ForegroundColor White
    Write-Host "   Message: $($response.message)" -ForegroundColor White
    Write-Host "   Version: $($response.proxy_version)" -ForegroundColor White
} catch {
    Write-Host "‚ùå Erreur de connexion au proxy: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "V√©rifiez les logs avec Get-Job | Receive-Job" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìä Donn√©es disponibles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ 5 projets de d√©monstration" -ForegroundColor White
Write-Host "   ‚Ä¢ Vuln√©rabilit√©s d'exemple" -ForegroundColor White
Write-Host "   ‚Ä¢ API compl√®te simul√©e" -ForegroundColor White

Write-Host ""
Write-Host "üåê Ouvrez votre navigateur sur:" -ForegroundColor Green
$htmlPath = Join-Path $PWD "index-new.html"
Write-Host "   file:///$($htmlPath.Replace('\', '/'))" -ForegroundColor Yellow

Write-Host ""
Write-Host "üõ†Ô∏è Commandes utiles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Get-Job : Voir l'√©tat du proxy" -ForegroundColor White
Write-Host "   ‚Ä¢ Get-Job | Receive-Job : Voir les logs" -ForegroundColor White
Write-Host "   ‚Ä¢ Get-Job | Stop-Job : Arr√™ter le proxy" -ForegroundColor White

Write-Host ""
Write-Host "‚úã Appuyez sur une touche pour continuer..." -ForegroundColor Yellow
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
